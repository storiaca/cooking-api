// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id              Int               @id @default(autoincrement())
  email           String            @db.VarChar(255)
  first_name      String            @db.VarChar(255)
  last_name       String            @db.VarChar(255)
  user_points     Int               @db.Int
  user_image      String            @db.VarChar(255)
  auth_codes      Auth_Codes[]
  user_categories User_Categories[]
  post_likes      Post_Likes[]
  post_comments   Post_Comments[]

  @@map(name: "users")
}

model Auth_Codes {
  id            String   @id @default(uuid())
  user_id       Users    @relation(fields: [usersId], references: [id])
  usersId       Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  valid_through DateTime

  @@map(name: "auth_codes")
}

model Categories {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  user_categories User_Categories[]
  post_categories Post_Categories[]

  @@map(name: "categories")
}

model User_Categories {
  user       Users      @relation(fields: [userId], references: [id])
  userId     Int
  category   Categories @relation(fields: [categoryId], references: [id])
  categoryId Int

  @@id([userId, categoryId])
  @@map(name: "user_categories")
}

model Post_Categories {
  post       Posts      @relation(fields: [postId], references: [id])
  postId     Int
  category   Categories @relation(fields: [categoryId], references: [id])
  categoryId Int

  @@id([postId, categoryId])
  @@map(name: "post_categories")
}

model Post_Likes {
  post    Posts @relation(fields: [postId], references: [id])
  postId  Int
  liker   Users @relation(fields: [likerId], references: [id])
  likerId Int

  @@id([postId, likerId])
  @@map(name: "post_likes")
}

model Post_Comments {
  id          Int      @id @default(autoincrement())
  post        Posts    @relation(fields: [postId], references: [id])
  postId      Int
  commenter   Users    @relation(fields: [commenterId], references: [id])
  commenterId Int
  comment     String   @db.VarChar(255)
  createdAt   DateTime @default(now())

  @@map(name: "post_comments")
}

model Posts {
  id              Int               @id @default(autoincrement())
  title           String            @db.VarChar(255)
  body            String            @db.VarChar(255)
  image           String            @db.VarChar(255)
  video           String            @db.VarChar(255)
  post_categories Post_Categories[]
  post_likes      Post_Likes[]
  post_comments   Post_Comments[]

  @@map(name: "posts")
}
